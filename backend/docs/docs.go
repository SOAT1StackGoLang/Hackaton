// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/clock-in": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entries"
                ],
                "summary": "Create a new entry",
                "parameters": [
                    {
                        "type": "string",
                        "default": "testing",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header"
                    },
                    {
                        "description": "Entry At",
                        "name": "entry_at",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\"entry_at\": \"2024-03-24T00:52:24Z\"}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/reports": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Decode JWT token and get report by range",
                "parameters": [
                    {
                        "type": "string",
                        "default": "testing",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "\"2006-01-02\"",
                        "default": "2024-03-01",
                        "description": "Start Date",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "\"2006-01-02\"",
                        "default": "2024-03-31",
                        "description": "End Date",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Routing",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/reports/csv": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Decode JWT token and get report by range as CSV download",
                "parameters": [
                    {
                        "type": "string",
                        "default": "testing",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "\"2006-01-02\"",
                        "default": "2024-03-01",
                        "description": "Start Date",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "\"2006-01-02\"",
                        "default": "2024-03-31",
                        "description": "End Date",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Routing",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/reports/daily": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Decode JWT token and get report by reference",
                "parameters": [
                    {
                        "type": "string",
                        "default": "testing",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "format": "\"2006-01-02\"",
                        "default": "2024-03-24",
                        "description": "Reference Date",
                        "name": "reference",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Routing",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Hackaton API",
	Description:      "API for managing Hackaton",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
